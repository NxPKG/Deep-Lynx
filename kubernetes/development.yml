apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deeplynx-dev-pv
  namespace: deeplynx-dev
  labels:
    service: deeplynx-dev
    app: deeplynx-dev
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: deeplynx-dev-file
  resources:
    requests:
      storage: 100Gi


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deeplynx-redis
  namespace: deeplynx-dev
  labels:
    app: deeplynx-redis
    service: deeplynx-redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: deeplynx-redis
  template:
    metadata:
      labels:
        app: deeplynx-redis
    spec:
      containers:
        - name: deeplynx-redis
          image: redis:latest
          ports:
            - containerPort: 6379

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deeplynx
  namespace: deeplynx-dev
  labels:
    service: deeplynx
    app: deeplynx

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: deeplynx
  template:
    metadata:
      labels:
        app: deeplynx
    spec:
      containers:
        - name: deeplynx
          image: ${CI_REGISTRY}/${CI_REGISTRY_PATH}:${RUN_NUMBER}-dev
          imagePullPolicy: Always
          args:
            - /bin/sh
            - -c
            - pm2-runtime ecosystem.config.js
          env:
            - name: CORE_DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: postgresql-conn-string
                  key: postgres_url
            - name: DB_NAME
              value: '${DB_NAME}'
            - name: AZURE_BLOB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: sa-conn-string
                  key: sa_url
            - name: AZURE_BLOB_CONTAINER_NAME
              value: '${AZURE_BLOB_CONTAINER_NAME}'
            - name: CONTAINER_INVITE_URL
              value: '${CONTAINER_INVITE_URL}'
            - name: FILE_STORAGE_METHOD
              value: '${FILE_STORAGE_METHOD}'
            - name: SMTP_HOST
              value: '${SMTP_HOST}'
            - name: SMTP_TLS
              value: '${SMTP_TLS}'
            - name: EMAIL_ADDRESS
              value: '${EMAIL_ADDRESS}'
            - name: EMAIL_ENABLED
              value: '${EMAIL_ENABLED}'
            - name: EMAIL_VALIDATION_ENFORCED
              value: '${EMAIL_VALIDATION_ENFORCED}'
            - name: ROOT_ADDRESS
              value: '${ROOT_ADDRESS}'
            - name: ENCRYPTION_KEY_PATH
              value: '${ENCRYPTION_KEY_PATH}'
            - name: NODE_ENV
              value: '${NODE_ENV}'
            - name: AUTH_STRATEGY
              value: '${AUTH_STRATEGY}'
            - name: VUE_APP_BUNDLED_BUILD
              value: 'true'
            - name: BASE_URL
              value: '${BASE_URL}'
            - name: SAML_ENABLED
              value: '${SAML_ENABLED}'
            - name: SAML_ADFS_ENTRY_POINT
              value: '${SAML_ADFS_ENTRY_POINT}'
            - name: SAML_ADFS_ISSUER
              value: '${SAML_ADFS_ISSUER}'
            - name: SAML_ADFS_CALLBACK
              value: '${SAML_ADFS_CALLBACK}'
            - name: SAML_ADFS_PRIVATE_CERT_PATH
              value: '${SAML_ADFS_PRIVATE_CERT_PATH}'
            - name: SAML_ADFS_PUBLIC_CERT_PATH
              value: '${SAML_ADFS_PUBLIC_CERT_PATH}'
            - name: SAML_ADFS_CLAIMS_EMAIL
              value: '${SAML_ADFS_CLAIMS_EMAIL}'
            - name: SAML_ADFS_CLAIMS_NAME
              value: '${SAMD_ADFS_CLAIMS_NAME}'
            - name: PROCESS_QUEUE_NAME
              value: '${PROCESS_QUEUE_NAME}'
            - name: EVENTS_QUEUE_NAME
              value: '${EVENT_QUEUE_NAME}'
            - name: DATA_SOURCES_QUEUE_NAME
              value: '${DATA_SOURCES_QUEUE_NAME}'
            - name: CACHE_PROVIDER
              value: '${CACHE_PROVIDER}'
            - name: CACHE_REDIS_CONNECTION_STRING
              value: '${CACHE_REDIS_CONNECTION_STRING}'
            - name: EDGE_INSERTION_QUEUE_NAME
              value: '${EDGE_INSERTION_QUEUE_NAME}'
            - name: AZURE_SERVICE_BUS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: azure-servicebus
                  key: connection_string
            - name: QUEUE_SYSTEM
              value: '${QUEUE_SYSTEM}'
            - name: TIMESCALEDB_ENABLED
              value: '${TIMESCALEDB_ENABLED}'
            - name: TZ
              value: '${TZ}'
            - name: COMMIT_REF_FOR_CICD
              value: '${CI_COMMIT_SHA}'
            - name: NODE_EXTRA_CA_CERTS
              value: '${NODE_EXTRA_CA_CERTS}'
            - name: RUN_JOBS
              value: '${RUN_JOBS}'
          ports:
            - containerPort: 8090
          volumeMounts:
            - mountPath: "/var/deeplynx/data"
              name: nfs
      hostAliases:
        - hostnames:
            - "${JAZZ_HOST}"
          ip: "${JAZZ_IP}"
        - hostnames:
            - "${ELM_HOST}"
          ip: "${ELM_IP}"
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: deeplynx-dev-pv

---

apiVersion: v1
kind: Service
metadata:
  name: deeplynx-ingress
  namespace: deeplynx-dev
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8090
  selector:
    app: deeplynx

---

apiVersion: v1
kind: Service
metadata:
  namespace: deeplynx-dev
  labels:
    app: deeplynx-redis
  name: deeplynx-redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    app: deeplynx-redis

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_clear_headers "strict-transport-security";
      more_clear_headers "x-content-type-options";
      more_clear_headers "x-frame-options";
      more_clear_headers "content-security-policy";
  name: deeplynx-nginx-ingress
  namespace: deeplynx-dev
spec:
  rules:
    - host: ${NETWORKING_HOST}
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: deeplynx-ingress
                port:
                  number: 80
            path: /