name: Deploy Production and Update SDKS

on:
  workflow_dispatch:

jobs:
  deploy-deeplynx-prod:
    runs-on: [ self-hosted ]
    environment: production
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - shell: bash
        name: Manifest env substitute
        env:
          CI_REGISTRY: ${{ secrets.CI_REGISTRY}}
          CI_REGISTRY_PATH: ${{ secrets.CI_REGISTRY_PATH}}
          DB_NAME: ${{ secrets.DB_NAME }}
          AZURE_BLOB_CONTAINER_NAME: ${{ secrets.AZURE_BLOB_CONTAINER_NAME }}
          CONTAINER_INVITE_URL: ${{ secrets.CONTAINER_INVITE_URL }}
          FILE_STORAGE_METHOD: ${{ secrets.FILE_STORAGE_METHOD}}
          SMTP_HOST: ${{ secrets.SMTP_HOST}}
          SMTP_TLS: ${{ secrets.SMTP_TLS}}
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS}}
          EMAIL_ENABLED: ${{ secrets.EMAIL_ENABLED}}
          EMAIL_VALIDATION_ENFORCED: ${{ secrets.EMAIL_VALIDATION_ENFORCED}}
          ROOT_ADDRESS: ${{ secrets.ROOT_ADDRESS }}
          ENCRYPTION_KEY_PATH: ${{ secrets.ENCRYPTION_KEY_PATH }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          AUTH_STRATEGY: ${{ secrets.AUTH_STRATEGY }}
          BASE_URL: ${{ secrets.BASE_URL }}
          SAML_ENABLED: ${{ secrets.SAML_ENABLED }}
          SAML_ADFS_ENTRY_POINT: ${{ secrets.SAML_ADFS_ENTRY_POINT }}
          SAML_ADFS_ISSUER: ${{ secrets.SAML_ADFS_ISSUER }}
          SAML_ADFS_CALLBACK: ${{ secrets.SAML_ADFS_CALLBACK }}
          SAML_ADFS_PRIVATE_CERT_PATH: ${{ secrets.SAML_ADFS_PRIVATE_CERT_PATH }}
          SAML_ADFS_PUBLIC_CERT_PATH: ${{ secrets.SAML_ADFS_PUBLIC_CERT_PATH }}
          SAML_ADFS_CLAIMS_EMAIL: ${{ secrets.SAML_ADFS_CLAIMS_EMAIL }}
          SAML_ADFS_CLAIMS_NAME: ${{ secrets.SAML_ADFS_CLAIMS_NAME }}
          PROCESS_QUEUE_NAME: ${{ secrets.PROCESS_QUEUE_NAME }}
          EVENTS_QUEUE_NAME: ${{ secrets.EVENTS_QUEUE_NAME }}
          DATA_SOURCES_QUEUE_NAME: ${{ secrets.DATA_SOURCES_QUEUE_NAME }}
          CACHE_PROVIDER: ${{ secrets.CACHE_PROVIDER }}
          CACHE_REDIS_CONNECTION_STRING: ${{ secrets.CACHE_REDIS_CONNECTION_STRING }}
          EDGE_INSERTION_QUEUE_NAME: ${{ secrets.EDGE_INSERTION_QUEUE_NAME }}
          QUEUE_SYSTEM: ${{ secrets.QUEUE_SYSTEM }}
          TIMESCALEDB_ENABLED: ${{ secrets.TIMESCALEDB_ENABLED }}
          TZ: ${{ secrets.TZ }}
          CI_COMMIT_SHA: $GITHUB_SHA
          NODE_EXTRA_CA_CERTS: ${{ secrets.NODE_EXTRA_CA_CERTS }}
          RUN_JOBS: ${{ secrets.RUN_JOBS }}
          JAZZ_HOST: ${{ secrets.JAZZ_HOST }}
          JAZZ_IP: ${{ secrets.JAZZ_IP }}
          ELM_HOST: ${{ secrets.ELM_HOST }}
          ELM_IP: ${{ secrets.ELM_IP }}
          NETWORKING_HOST: ${{ secrets.NETWORKING_HOST }}
        run: |
          cd $GITHUB_WORKSPACE
          envsubst < kubernetes/production.yml > kubernetes/production_final.yml
      - uses: azure/setup-kubectl@v3
      - uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          context: deploy-service-account
      - uses: Azure/k8s-deploy@v4
        with:
          resource-group: ${{ secrets.CI_RESOURCE_GROUP }}
          name: ${{ secrets.CLUSTER_NAME }}
          namespace: deeplynx-prd
          action: deploy
          force: true
          strategy: basic
          manifests: |
            kubernetes/production_final.yml
  update-sdks:
    runs-on: [ self-hosted ]
    environment: production
    needs: deploy-deeplynx-prod
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
      - run: |
          mkdir /opt/swagger && cd /opt/swagger
          wget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/3.0.35/swagger-codegen-cli-3.0.35.jar -O swagger-codegen-cli.jar
          git clone ${{ secrets.DL_JS_SDK }}
          git clone ${{ secrets.DL_PY_SDK }}
          git clone ${{ secrets.DL_CSHARP_SDK }}
          git clone ${{ secrets.DL_R_SDK }}
          java -jar swagger-codegen-cli.jar generate -i $GITHUB_WORKSPACE/API\ Documentation/Core.swagger_collection.yaml -l typescript-axios -o deeplynx-js-sdk
          java -jar swagger-codegen-cli.jar generate -i $GITHUB_WORKSPACE/API\ Documentation/Core.swagger_collection.yaml -l csharp -o deeplynx-csharp-sdk
          java -jar swagger-codegen-cli.jar generate -i $GITHUB_WORKSPACE/API\ Documentation/Core.swagger_collection.yaml -l r -o deeplynx-r-sdk
          java -jar swagger-codegen-cli.jar generate -i $GITHUB_WORKSPACE/API\ Documentation/Core.swagger_collection.yaml -l python -o deeplynx-py-pkg --additional-properties packageName=deep_lynx projectName=deep_lynx
          cd deeplynx-js-sdk
          git add * && git commit -m $GITHUB_SHA || true
          git push ${{ secrets.DL_JS_SDK }} main 
          cd ../deeplynx-py-pkg
          git add * && git commit -m $GITHUB_SHA || true
          git push ${{ secrets.DL_PY_SDK }} main
          cd ../deeplynx-csharp-sdk
          git add * && git commit -m $GITHUB_SHA || true
          git push ${{ secrets.DL_CSHARP_SDK }} main
          cd ../deeplynx-r-sdk
          git add * && git commit -m $GITHUB_SHA || true
          git push ${{ secrets.DL_R_SDK }} main
